#!/usr/bin/env -S just --justfile
set fallback
[no-exit-message]
demo: build
    cd demo && quickemu --vm ./vm.conf

present:
    cd src && npm run dev -- --remote

build:
    #!/usr/bin/env bash
    lastUpdatedInputs=$(find {{justfile_directory()}}/demo/build {{justfile_directory()}}/demo/*.sh -type f -exec stat \{} --printf="%Y\n" \; | sort -n -r | head -n 1)
    mkdir -p {{justfile_directory()}}/demo/dest
    lastUpdatedOutputs=$(find {{justfile_directory()}}/demo/dest -type f -exec stat \{} --printf="%Y\n" \; | sort -n -r | head -n 1)

    if [[ "$lastUpdatedInputs" > "$lastUpdatedOutputs" ]]; then
        echo "Building Demo"
        docker build -t archisobuild {{justfile_directory()}}/demo/build
        cp {{justfile_directory()}}/demo/install.sh {{justfile_directory()}}/demo/build/Profile/airootfs/root/install.sh
        cp {{justfile_directory()}}/demo/setup.sh {{justfile_directory()}}/demo/build/Profile/airootfs/root/setup.sh
        cp {{justfile_directory()}}/../shared/demo-magic.sh {{justfile_directory()}}/demo/build/Profile/airootfs/root/demo-magic.sh
        docker run --rm --privileged \
            -v {{justfile_directory()}}/demo/build/Profile:/profile \
            -v {{justfile_directory()}}/demo/dest:/out \
            -v {{justfile_directory()}}/demo/tmp/cache:/var/cache/pacman/pkg/ \
            archisobuild
    else
        echo "No changes detected"
        echo "Last updated Inputs: $lastUpdatedInputs"
        echo "Last updated Outputs: $lastUpdatedOutputs"
    fi